/* You use a mix of fixed (px) and relative (%) units - conside using more relative measurements for consistency and a more responsive project. */

body {
    background: black;
    color: white;
    font-family: 'Source Code Pro', monospace;
} 

h1{
    text-align: center;
}
h2 {
    font-size: 30px;
}

h3 {
    text-align: center;
    font-size: 20px;
}

.instructions {
    display: flex;
    justify-content: center;
}

ul {
    margin-top: 0px;
}


.flex {
    display: flex;
    flex-direction: column;
    height: 100vh;
    font-size: 35px;
    max-width: 845px;
    margin: auto;
}

.boardwins {
    display: flex;
    justify-content: space-between;
    height: 50%;
}

.scorebox {
    border: solid white;
    width: 125px;
    height: 125px;
}

.hangmanboard {
    border-top: solid white;
    border-right: solid white;
    height: 80%;
    width: 35%;
    margin: 10px;
    align-self: center;
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-columns: 1fr 1fr 1fr;
    
}

.head {
    grid-row: 1;
    grid-column: 2;
    display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  border: solid white;
  font-size: 20px;
}

.body {
    grid-row: 2;
    grid-column: 2;
    display: flex;
  align-items: center;
  justify-content: center;
  border: solid white;
}

.leftarm {
    grid-row: 2;
    grid-column: 1;
    display: flex;
  align-items: center;
  justify-content: center;
}

.rightarm {
    grid-row: 2;
    grid-column: 3;
    display: flex;
  align-items: center;
  justify-content: center;
}

.leftleg {
    grid-row: 3;
    grid-column: 1;
    display: flex;
  align-items: center;
  justify-content: center;
  border-right: solid white;
}

.rightleg {
    grid-row: 3;
    grid-column: 3;
    display: flex;
  align-items: center;
  justify-content: center;
  border-left: solid white;
}

.hidden {
    visibility: hidden;
}

.letterboard {
    border: solid white;
    height: 10%;
    width: 75%;
    margin: 10px;
    align-self: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

}
.tiles {
    display: flex;
    justify-content: center;
    align-items: center;
}

.bottomarea {
    border-style: solid;
    height: 15%;
    align-self: center;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.box {
    height: 30px;
    width: 30px;
    border: solid white;
    border-width: 2px;
    margin-left: 10px;
    margin-right: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    
}

#form {
    height:30px;
    width: 30px;
    font-size: 20px;
    text-align: center;
    margin: 10px;
    border: solid white;
}

.newflex{
    display: flex;
    align-items: center;
    align-self: center;
    justify-content: center;
    width: 70%;
}

.guessedletters {
    width: 300px;
    height: 50px;
    display: flex;
    align-items: center;
}

input[type=button] {
    width: 100px;
    margin: 0px;
}

.armdrawing {
    width: 100%;
    height: 20px;
    border: solid white;
}

.newgame {
    display: flex;
    align-items: center;
    justify-content: center;
    /* width: 40%; */
}

.winning {
    text-align: center;
    background: green;
}

.losing {
    text-align: center;
    background: red;
}

#newword {
    width: 200px;
    height: 25px;
    font-size: 20px;
    margin-right: 15px;
}

.submission {
    border: dotted white;
    margin: 10px;
}

.startanewgame {
    padding: 10px;
    border: dotted white;
}

p {
    text-align: center;
    margin-top: 0px;
}

/* Used this website to do the blinking animation
http://www.multipetros.gr/posts/728-blink-elements-border-the-css-way/ */

@keyframes blink { 
    50% { border-color: #ff0000; } 
 }
 .blinking { /*or other element you want*/
     animation: blink .5s step-end infinite alternate;
 }
 /* cool tool - good find! */